@PACKAGE_INIT@

set(ForGE_VERSION "@PROJECT_VERSION@")

# Find dependencies
find_package(PkgConfig REQUIRED)

# Cairo dependency for custom backend
pkg_check_modules(CAIRO cairo)
if(CAIRO_FOUND)
    set(ForGE_CAIRO_FOUND TRUE)
else()
    set(ForGE_CAIRO_FOUND FALSE)
endif()

# Qt6 dependency
find_package(Qt6 COMPONENTS Core Widgets QUIET)
if(Qt6_FOUND)
    set(ForGE_QT_FOUND TRUE)
else()
    set(ForGE_QT_FOUND FALSE)
endif()

# GTK4 dependency
pkg_check_modules(GTK4 gtk4)
if(GTK4_FOUND)
    set(ForGE_GTK4_FOUND TRUE)
else()
    set(ForGE_GTK4_FOUND FALSE)
endif()

# Tcl/Tk dependency
find_package(TCL QUIET)
find_package(TK QUIET)
if(TCL_FOUND AND TK_FOUND)
    set(ForGE_TCL_TK_FOUND TRUE)
else()
    set(ForGE_TCL_TK_FOUND FALSE)
endif()

# Set up imported target
include("${CMAKE_CURRENT_LIST_DIR}/ForGETargets.cmake")

# Provide legacy variables
set(ForGE_LIBRARIES ForGE::forge)
set(ForGE_INCLUDE_DIRS "@CMAKE_INSTALL_PREFIX@/include/forge")
set(ForGE_LIBRARY_DIRS "@CMAKE_INSTALL_PREFIX@/lib")

check_required_components(ForGE)